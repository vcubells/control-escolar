@model ControlEscolar.Models.Materia

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Materia</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Titulo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Titulo)
            @Html.ValidationMessageFor(model => model.Titulo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Creditos)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Creditos)
            @Html.ValidationMessageFor(model => model.Creditos)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DepartamentoID, "Departamento")
        </div>
        <div class="editor-field">
            @Html.DropDownList("DepartamentoID", String.Empty)
            @Html.ValidationMessageFor(model => model.DepartamentoID)
        </div>

         <div class="editor-label">
            <table>
                <tr>
                    @{
                        int columnas = 0;
    foreach (var profesor in ViewBag.Profesores as List<ControlEscolar.ViewModels.ProfesoresAsignados>)
    {   
        if (columnas++ % 5 == 0) {
            @:</tr> <tr>
        }
        <td>
                    <input type="checkbox" 
                        name="profesoresSeleccionados" 
                        value="@profesor.PersonaID"
                        @(Html.Raw(profesor.Asignado ? "checked=\"checked\"" : ""))
                        />
                    @profesor.Nombre
        </td> 
    }
                    }
                </tr>
            </table>
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
